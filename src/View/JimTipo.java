/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import daoImpl.MarcaDaoImpl;
import daoImpl.TipoDaoImpl;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Marca;
import model.Nodo;
import model.Tipo;

/**
 *
 * @author suare
 */
public class JimTipo extends javax.swing.JInternalFrame {

    private TipoDaoImpl crudTipo;
    private DefaultTableModel modelo;
    private Object[] filaDatos;
    private int idTipo;
    private boolean guardar = false;

    public JimTipo() {
        initComponents();
        int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
        int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
        this.setSize(ancho, alto - 106);
        filaDatos = new Object[2];
        crudTipo = new TipoDaoImpl();
        modelo = new DefaultTableModel();
        habilitarCampo(false);
        crudBotones(false);
        registroBotones(false);
        listarTipo();

    }

    private void listarTipo() {
        modelo = (DefaultTableModel) tblTipo.getModel();
        crudTipo.guardarEnArchivo();  // Guarda los datos en archivo

        Nodo aux = crudTipo.inicio;

        // Verificar si la lista no está vacía
        if (aux != null && crudTipo.total() > 0) {
            // Recorrer la lista circular
            do {
                if (aux.getTipo() != null) {  // Asegurarse de que el objeto 'Tipo' no sea nulo
                    filaDatos[0] = aux.getTipo().getIdTipo();  // Obtener el ID del tipo
                    filaDatos[1] = aux.getTipo().getNombre();  // Obtener el nombre del tipo
                    modelo.addRow(filaDatos);  // Agregar la fila a la tabla
                }
                aux = aux.getSiguiente();  // Avanzar al siguiente nodo
            } while (aux != crudTipo.inicio);  // Salir del ciclo cuando se vuelve al inicio de la lista
            if (crudTipo.total() > 0) {
                btnEliminarFinal.setEnabled(true);
                btnEliminarInicio.setEnabled(true);
            }
            // Activar o desactivar el campo de búsqueda según el total de elementos
            if (crudTipo.total() > 1) {
                txtBuscar.setEnabled(true);

            } else {
                txtBuscar.setEnabled(false);
            }
        } else {
            // Si la lista está vacía, desactivar la búsqueda
            txtBuscar.setEnabled(false);
        }
    }

    private void limpiarTabla() {
        modelo = (DefaultTableModel) tblTipo.getModel();
        modelo.getDataVector().removeAllElements();
        tblTipo.removeAll();
    }

    private void registroBotones(boolean f) {
        btnGuardar.setEnabled(f);
        btnGuardarInicio.setEnabled(f);
        btnGuardarPosicion.setEnabled(f);
        btnCancelar.setEnabled(f);
    }

    private void crudBotones(boolean f) {
        btnNuevo.setEnabled(!f);
        btnEditar.setEnabled(f);
        btnEliminar.setEnabled(f);
        btnEliminarInicio.setEnabled(f);
        btnEliminarFinal.setEnabled(f);
    }

    private void habilitarCampo(boolean f) {
        txtNombre.setText("");
        txtNombre.setEnabled(f);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGuardarInicio = new javax.swing.JButton();
        btnEliminarInicio = new javax.swing.JButton();
        btnGuardarPosicion = new javax.swing.JButton();
        btnEliminarFinal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTipo = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblMensaje = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("TIPO DE PAGO");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 90, 30));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 230, 30));

        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, -1, -1));

        btnNuevo.setText("NUEVO");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        btnGuardarInicio.setText("GUARDAR INICIO");
        btnGuardarInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInicioActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardarInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, -1, -1));

        btnEliminarInicio.setText("ELIMINAR INICIO");
        btnEliminarInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInicioActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminarInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, -1, -1));

        btnGuardarPosicion.setText("GUARDAR POSICION");
        btnGuardarPosicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPosicionActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardarPosicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, -1, -1));

        btnEliminarFinal.setText("ELIMINAR FINAL");
        btnEliminarFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFinalActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminarFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, -1, -1));

        jLabel2.setText("BUSCAR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, 30));

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        getContentPane().add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 240, 30));

        tblTipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TIPO"
            }
        ));
        tblTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblTipoMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTipo);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 620, 200));

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, -1, -1));

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, -1, -1));
        getContentPane().add(lblMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 210, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel3.setText("TIPO DE PAGO");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        System.out.println("Awui boton");

        String title = txtNombre.getText().strip();
        if (title.length() > 0 && title.length() <= 50) {
            if (guardar) {
                if (crudTipo.actualizar(new Tipo(idTipo, title))) {
                    lblMensaje.setText("Se actualizo correctamente el tipo de pago con ID " + idTipo + ".");
                    habilitarCampo(false);
                    registroBotones(false);
                    crudBotones(false);
                    guardar = false;
                } else {
                    txtNombre.requestFocus();
                    lblMensaje.setText("No se actualizo el tipo de pago.");
                }
            } else {
                System.out.println("Awui estoy");

                if (crudTipo.obtenerId(title) == -1) {
                    System.out.println("Awui estoy tipooo");

                    if (crudTipo.agregar(new Tipo(crudTipo.obtenerUltimoId(), title))) {
                        System.out.println("Awui agregue");

                        lblMensaje.setText("Se agrego correctamente el tipo de pago.");
                        habilitarCampo(false);
                        registroBotones(false);
                        crudBotones(false);
                        guardar = false;
                    } else {
                        lblMensaje.setText("No se agrego el tipo de pago.");
                    }
                } else {
                    txtNombre.requestFocus();
                    lblMensaje.setText("el tipo de pago ya existe.");
                }
            }
            tblTipo.clearSelection();
            limpiarTabla();
            listarTipo();
        } else {
            JOptionPane.showMessageDialog(null,
                    "Advertencia, El nombre del tipo de pago debe estar entre 1 y 50 letras.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        crudBotones(false);
        registroBotones(false);
        txtNombre.setText("");
        txtNombre.setEnabled(false);
        txtBuscar.setEnabled(true);
        tblTipo.clearSelection();
        guardar = false;
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtNombre.setText("");
        lblMensaje.setText("");
        txtNombre.setEnabled(true);
        registroBotones(true);
        crudBotones(false);
        btnNuevo.setEnabled(false);
        txtNombre.requestFocus();
        txtBuscar.setEnabled(false);
        tblTipo.clearSelection();
        guardar = false;
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tblTipoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTipoMouseReleased
        int fila = tblTipo.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(null,
                    "Debe seleccionar una fila.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            idTipo = Integer.parseInt(tblTipo.getValueAt(fila, 0).toString());
            txtNombre.setText(tblTipo.getValueAt(fila, 1).toString());
            lblMensaje.setText("");
            txtNombre.setEnabled(false);
            registroBotones(false);
            crudBotones(true);
            btnCancelar.setEnabled(true);
        }
    }//GEN-LAST:event_tblTipoMouseReleased

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        guardar = true;
        txtNombre.setEnabled(true);
        txtNombre.requestFocus();
        registroBotones(true);
        crudBotones(false);
        btnNuevo.setEnabled(false);
        lblMensaje.setText("");
        tblTipo.clearSelection();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tblTipo.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila");
        } else {
            if (JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Eliminar", JOptionPane.YES_NO_OPTION, 3) == 0) {
                if (crudTipo.eliminar(new Tipo(idTipo))) {
                    limpiarTabla();
                    listarTipo();
                    lblMensaje.setText("El registro se eliminó correctamente");
                } else {
                    lblMensaje.setText("El registro NO se pudo eliminar");
                }
            }
            registroBotones(false);
            crudBotones(false);
            txtNombre.setText("");
            tblTipo.clearSelection();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        limpiarTabla();
        int n = 0;
        modelo = (DefaultTableModel) tblTipo.getModel();
        String valorBuscar = txtBuscar.getText().strip();
        if (valorBuscar.equalsIgnoreCase("")) {
            limpiarTabla();
            listarTipo();
            lblMensaje.setText("");
        } else {
            Nodo fil = crudTipo.inicio;
            do {
                if (fil.getTipo() != null) {
                    if (String.valueOf(fil.getTipo().getIdTipo()).contains(valorBuscar) || fil.getTipo().getNombre().contains(valorBuscar)) {
                        filaDatos[0] = fil.getTipo().getIdTipo();  // Obtener el ID del tipo
                        filaDatos[1] = fil.getTipo().getNombre();  // Obtener el nombre del tipo
                        modelo.addRow(filaDatos); 
                        n++;
                    }
                }
                fil = fil.getSiguiente();  // Avanzar al siguiente nodo
            } while (fil != crudTipo.inicio);
            lblMensaje.setText(n + " registros encontrados.");
            txtNombre.setText("");
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnGuardarPosicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPosicionActionPerformed
        String title = txtNombre.getText().strip();
        String valor;
        int posicion = -1;
        while (posicion <= 0) {
            valor = JOptionPane.showInputDialog(null, "Ingrese una posición (mayor a 0):", "Agrega una posición", JOptionPane.QUESTION_MESSAGE);
            if (valor == null) {
                break;
            }
            try {
                posicion = Integer.parseInt(valor.strip());
                if (posicion <= 0) {
                    JOptionPane.showMessageDialog(null, "Por favor, ingrese un número positivo mayor a 0.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        if (posicion > 0) {
            if (title.length() > 0 && title.length() <= 50) {
                if (crudTipo.obtenerId(title) == -1) {
                    if (crudTipo.agregarPosicion(new Tipo(crudTipo.obtenerUltimoId(), title), posicion - 1)) {
                        limpiarTabla();
                        listarTipo();
                        habilitarCampo(false);
                        registroBotones(false);
                        crudBotones(false);
                        lblMensaje.setText("El registro se guardo correctamente");
                    }
                } else {
                    txtNombre.requestFocus();
                    lblMensaje.setText("La marca ya existe.");
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Advertencia, El nombre de la marca debe estar entre 1 y 50 letras.",
                        "Advertencia",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btnGuardarPosicionActionPerformed

    private void btnEliminarFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFinalActionPerformed
//        if (modelo.getRowCount() == 1){
//            modelo.setRowCount(0);
//            registroBotones(false);
//            crudBotones(false);
//        }
        crudTipo.eliminarFinal();
        limpiarTabla();
        listarTipo();
    }//GEN-LAST:event_btnEliminarFinalActionPerformed

    private void btnEliminarInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInicioActionPerformed
        // TODO add your handling code here:
//        if (modelo.getRowCount() == 1){
//            modelo.setRowCount(0);
//            registroBotones(false);
//            crudBotones(false);
//        }
        crudTipo.eliminarInicio();
        limpiarTabla();
        listarTipo();
    }//GEN-LAST:event_btnEliminarInicioActionPerformed

    private void btnGuardarInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInicioActionPerformed
        // TODO add your handling code here:
        String title = txtNombre.getText().strip();
        if (title.length() > 0 && title.length() <= 50) {
            if (crudTipo.obtenerId(title) == -1) {
                if (crudTipo.agregarInicio(new Tipo(crudTipo.obtenerUltimoId(), title))) {
                    limpiarTabla();
                    listarTipo();
                    habilitarCampo(false);
                    registroBotones(false);
                    crudBotones(false);
                    lblMensaje.setText("La marca se guardo correctamente");
                } else {
                    lblMensaje.setText("La marca no se guardo.");
                }
            } else {
                txtNombre.requestFocus();
                lblMensaje.setText("La marca ya existe.");
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Advertencia, El nombre de la marca debe estar entre 1 y 50 letras.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnGuardarInicioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarFinal;
    private javax.swing.JButton btnEliminarInicio;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarInicio;
    private javax.swing.JButton btnGuardarPosicion;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JTable tblTipo;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
